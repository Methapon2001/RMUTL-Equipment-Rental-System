generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

enum Type {
  STUDENT
  TEACHER
}

model User {
  username  String @id @unique
  password  String
  type      Type
  firstname String
  lastname  String
  Rent      Rent[]
}

model Brand {
  id        Int         @id @default(autoincrement())
  name      String
  equipment Equipment[]
}

model Equipment {
  id      Int      @id @default(autoincrement())
  name    String
  count   Int
  model   String
  brandId Int
  brand   Brand    @relation(fields: [brandId], references: [id])
  rent    Rent[]
  Broken  Broken[]
}

model Rent {
  id          Int       @id @default(autoincrement())
  userId      String
  equipmentId Int
  count       Int
  status      Status    @default(waiting)
  date        DateTime  @default(now())
  user        User      @relation(fields: [userId], references: [username])
  equipment   Equipment @relation(fields: [equipmentId], references: [id])
  return      Return?
  broken      Broken?
}

enum Status {
  waiting
  accepted
  rejected
}

model Return {
  id     Int      @id @default(autoincrement())
  date   DateTime @default(now())
  rentId Int      @unique
  rent   Rent     @relation(fields: [rentId], references: [id])
}

enum BrokenStatus {
  fixed
  pending
}

model Broken {
  id          Int          @id @default(autoincrement())
  equipmentId Int
  equipment   Equipment    @relation(fields: [equipmentId], references: [id])
  count       Int
  status      BrokenStatus @default(pending)
  rentId      Int?         @unique
  rent        Rent?        @relation(fields: [rentId], references: [id])
}
